java:
  Application.java: |
    package com.example;
    public class Application {
      public static void main(String[] args) {
        new B(new A(42)).bar();
      }
    }
  A.java: |
    package com.example;
    public class A {
        private final int x;
        public A(int x) {
            this.x = x;
        }
        public int foo() {
            return x * 2;
        }
    }
  B.java: |
    package com.example;
    public class B {
      private final A a;
      public B(A a) {
        this.a = a;
      }
      public int bar() {
        return a.foo() + 1;
      }
    }
eo:
  Application.eo: |
    +package com.example
    +alias org.eolang.jeo.opcode
    +alias org.eolang.jeo.label
    
    # This is the default 64+ symbols comment in front of named abstract object.
    [] > j$Application
      55 > version
      33 > access
      "java/lang/Object" > supername
      * > interfaces
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > new
        1 > access
        "()V" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          1 > stack
          1 > locals
        seq > @
          *
            $
            .super
            opcode > RETURN
              177
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > j$main
        9 > access
        "([Ljava/lang/String;)V" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          5 > stack
          1 > locals
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > arg__[Ljava/lang/String;__0
        seq > @
          *
            com/example/B
            .new
              com/example/A
              .new
                42
            .bar
            .ignore-result
            opcode > RETURN
              177

  A.eo: |
    +package com.example
    +alias org.eolang.jeo.opcode
    +alias org.eolang.jeo.label

    # This is the default 64+ symbols comment in front of named abstract object.
    [] > j$A
      55 > version
      33 > access
      "java/lang/Object" > supername
      * > interfaces
      field > j$x
        18 > access-j$x
        "I" > descriptor-j$x
        "" > signature-j$x
        int > value-j$x
          --
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > new
        1 > access
        "(I)V" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          2 > stack
          2 > locals
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > arg__I__0
        seq > @
          *
            $
            .super
            $
            .x
            .write-field
              local1
            opcode > RETURN
              177
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > j$foo
        1 > access
        "()I" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          2 > stack
          1 > locals
        seq > @
          *
            times
              $
              .x
              .get-field
              2
            opcode > IRETURN
              172

  B.eo: |
    +package com.example
    +alias org.eolang.jeo.opcode
    +alias org.eolang.jeo.label

    # This is the default 64+ symbols comment in front of named abstract object.
    [] > j$B
      55 > version
      33 > access
      "java/lang/Object" > supername
      * > interfaces
      field > j$a
        18 > access-j$a
        "Lcom/example/A;" > descriptor-j$a
        "" > signature-j$a
        class > value-j$a
          --
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > new
        1 > access
        "(Lcom/example/A;)V" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          2 > stack
          2 > locals
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > arg__Lcom/example/A;__0
        seq > @
          *
            $
            .super
            $
            .a
            .write-field
              local1
            opcode > RETURN
              177
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > j$bar
        1 > access
        "()I" > descriptor
        "" > signature
        * > exceptions
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > maxs
          2 > stack
          1 > locals
        seq > @
          *
            $
            .a
            .get-field
            .foo
            .plus
              1
            opcode > IRETURN
              172
